"""
Django settings for django_example project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# passwords and database credentials stored in .config NOT in version control
from .config import SECRET_KEY, PROD_HOST, DEBUG_HOST,\
                    PROD_DATABASE, DEBUG_DATABASE

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
# Comment out for production
DEBUG = True

# Brugger: Uncomment for production use, and the setting will change below 
#DEBUG = False


ALLOWED_HOSTS = []

if ( DEBUG == False):
    ALLOWED_HOSTS = PROD_HOST
else:
    ALLOWED_HOSTS = DEBUG_HOST

# Application definition

INSTALLED_APPS = [
    'genetics_ark',          # The apps we are developing
    'primer_designer',
    'widget_tweaks', # Makes rendering forms a lot easier
#    'debug_toolbar', # Awesome for debugging django sites
    'django_tables2',# make nice tables
    # Standard stuff
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_example.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_example.wsgi.application'


# Databases
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

if ( DEBUG == False ):
    DATABASES = PROD_DATABASE
else:
    DATABASES = DEBUG_DATABASE


DATABASE_ROUTERS = ['django_example.router.Router']


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


STATIC_PATH = os.path.join(BASE_DIR,'static')
STATIC_ROOT      = os.path.join(BASE_DIR, 'static')
# This is for the dev static files
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static_dev')]
STATIC_URL = '/static/'