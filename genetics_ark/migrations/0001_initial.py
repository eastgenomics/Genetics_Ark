# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2019-05-28 08:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=80, null=True)),
                ('total_reads', models.IntegerField(blank=True, null=True)),
                ('mapped_reads', models.IntegerField(blank=True, null=True)),
                ('duplicate_reads', models.IntegerField(blank=True, null=True)),
                ('mean_isize', models.FloatField(blank=True, null=True)),
                ('mean_het_ratio', models.FloatField(blank=True, null=True)),
                ('mean_homo_ratio', models.FloatField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('capture', models.CharField(blank=True, max_length=80, null=True)),
                ('bases_on_target', models.FloatField(blank=True, null=True)),
                ('mean_target_coverage', models.FloatField(blank=True, null=True)),
                ('coverage_0x', models.FloatField(blank=True, null=True)),
                ('coverage_2x', models.FloatField(blank=True, null=True)),
                ('coverage_10x', models.FloatField(blank=True, null=True)),
                ('coverage_20x', models.FloatField(blank=True, null=True)),
                ('coverage_30x', models.FloatField(blank=True, null=True)),
                ('coverage_40x', models.FloatField(blank=True, null=True)),
                ('coverage_50x', models.FloatField(blank=True, null=True)),
                ('coverage_100x', models.FloatField(blank=True, null=True)),
                ('versions', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('aaf', models.FloatField(blank=True, db_column='AAF', null=True)),
                ('quality', models.FloatField(blank=True, null=True)),
                ('gq', models.FloatField(blank=True, db_column='GQ', null=True)),
                ('allele_count', models.IntegerField(blank=True, null=True)),
                ('phase_key', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'analysis_variant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effect', models.CharField(blank=True, max_length=80, null=True)),
                ('cpos', models.CharField(blank=True, max_length=80, null=True)),
                ('dna_change', models.CharField(blank=True, db_column='DNA_change', max_length=80, null=True)),
                ('aa_change', models.CharField(blank=True, db_column='AA_change', max_length=80, null=True)),
                ('polyphen', models.CharField(blank=True, max_length=80, null=True)),
                ('sift', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('hgnc', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=800, null=True)),
            ],
            options={
                'db_table': 'gene',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenePanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'gene_panel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_key', models.CharField(blank=True, max_length=40, null=True)),
                ('meta_value', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'model_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('ext_id', models.IntegerField(blank=True, null=True)),
                ('active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'panel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('prefix', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chrom', models.CharField(max_length=80)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
            ],
            options={
                'db_table': 'region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Runfolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('samples', models.IntegerField(blank=True, null=True)),
                ('total_reads', models.BigIntegerField(blank=True, null=True)),
                ('mapped_reads', models.BigIntegerField(blank=True, null=True)),
                ('duplicate_reads', models.BigIntegerField(blank=True, null=True)),
                ('mean_isize', models.FloatField(blank=True, null=True)),
                ('bases_on_target', models.FloatField(blank=True, null=True)),
                ('bases_20x_coverage', models.FloatField(blank=True, null=True)),
                ('bases_100x_coverage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'runfolder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('labid', models.CharField(blank=True, max_length=80, null=True)),
                ('first_name', models.CharField(blank=True, max_length=80, null=True)),
                ('last_name', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'sample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SamplePanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'sample_panel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refseq', models.CharField(blank=True, max_length=200, null=True)),
                ('ens_id', models.CharField(blank=True, max_length=200, null=True)),
                ('ccds', models.CharField(blank=True, db_column='CCDS', max_length=200, null=True)),
                ('clinical_transcript', models.CharField(blank=True, max_length=1, null=True)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'transcript',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TranscriptRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exon_nr', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transcript_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chrom', models.CharField(max_length=8)),
                ('pos', models.IntegerField()),
                ('ref', models.CharField(max_length=100)),
                ('alt', models.CharField(max_length=100)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'variant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CNV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chr', models.CharField(max_length=2)),
                ('start', models.PositiveIntegerField()),
                ('end', models.PositiveIntegerField()),
                ('type', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'cnv',
            },
        ),
        migrations.CreateModel(
            name='Decon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(verbose_name='date of the run')),
            ],
            options={
                'db_table': 'decon',
            },
        ),
        migrations.CreateModel(
            name='DeconCNV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.DecimalField(decimal_places=4, max_digits=6)),
                ('start_b', models.PositiveIntegerField()),
                ('end_b', models.PositiveIntegerField()),
                ('nb_exons', models.PositiveIntegerField()),
                ('BF', models.PositiveIntegerField()),
                ('reads_expected', models.PositiveIntegerField()),
                ('reads_observed', models.PositiveIntegerField()),
                ('reads_ratio', models.FloatField()),
                ('CNV', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='CNV2Decons', to='genetics_ark.CNV')),
                ('decon', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Decon2CNVs', to='genetics_ark.Decon')),
            ],
            options={
                'db_table': 'decon_cnv',
            },
        ),
        migrations.CreateModel(
            name='Decongene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('chr', models.CharField(max_length=2)),
                ('start', models.PositiveIntegerField()),
                ('end', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'decongene',
            },
        ),
        migrations.CreateModel(
            name='DecongeneCNV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CNV', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='CNVs2Decongenes', to='genetics_ark.CNV')),
                ('decongene', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Decongenes2CNVs', to='genetics_ark.Decongene')),
            ],
            options={
                'db_table': 'decongene_cnv',
            },
        ),
        migrations.CreateModel(
            name='DeconSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decon', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Decon2Samples', to='genetics_ark.Decon')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Sample2Decons', to='genetics_ark.Sample')),
            ],
            options={
                'db_table': 'decon_sample',
            },
        ),
    ]
